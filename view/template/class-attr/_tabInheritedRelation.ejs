<%
const viewSelect2 = {ajax: {url: _url('view/list-select')}};
const attrUpdate = _url('class-attr/update');
const classUpdate = _url('class/update');
const viewUpdate = _url('view/update');
const refClassExists = {enable: ['NOT EMPTY', 'refClass']};
const refClassMaster = [{attr: 'refClass', param: 'pid'}];
const checkboxTemplate = _view.get('_part/attr/checkbox');
const columnTemplate = _view.get('_part/group/columns');
const overriddenTemplate = _view.get('_part/attr/overridden');
const selectTemplate = _view.get('_part/attr/select');
%>

<%- include(columnTemplate, {
    items: [{
        template: overriddenTemplate,
        params: {
            attr: 'refClass',
            template: selectTemplate,
            params: {
                items: null,
                displayValue: model.getRelatedTitle('refClass'),
                select2: {ajax: {url: _url('class/list-select')}},
                update: classUpdate,
                actionBinder: {require: {type: ['ref', 'backref']}}
            }
        }
    }, {
        template: overriddenTemplate,
        params: {
            attr: 'multiple',
            template: checkboxTemplate
        }
    }]
}) %>

<%- include(columnTemplate, {
    items: [{
        template: overriddenTemplate,
        params: {
            attr: 'refAttr',
            template: selectTemplate,
            params: {
                displayValue: model.getRelatedTitle('refAttr'),
                extHint: 'Key attribute is used for empty value',
                items: null,
                select2: {ajax: {url: _url('class-attr/list-select')}},
                depends: refClassMaster,
                update: attrUpdate,
                actionBinder: refClassExists
            }
        }
    }, {
        template: overriddenTemplate,
        params: {
            attr: 'linkAttr',
            template: selectTemplate,
            params: {
                displayValue: model.getRelatedTitle('linkAttr'),
                extHint: 'Key attribute is used for empty value',
                items: null,
                select2: {
                    ajax: {url: _url('class-attr/list-select')},
                    queryData: {pid: model.get('class')}
                },
                update: attrUpdate
            }
        }
    }]
}) %>

<hr class="dashed">

<%- include(overriddenTemplate, {
    attr: 'commands',
    template: _view.get('_part/attr/checkList'),
    params: {
        items: model.COMMAND_VALUE_LABELS
    }
}) %>

<%- include(columnTemplate, {
    items: [{
        template: overriddenTemplate,
        params: {
            attr: 'listView',
            template: selectTemplate,
            params: {
                displayValue: model.getRelatedTitle('listView'),
                items: null,
                select2: viewSelect2,
                depends: refClassMaster,
                update: viewUpdate,
                actionBinder: refClassExists
            }
        }
    }, {
        template: overriddenTemplate,
        params: {
            attr: 'selectListView',
            template: selectTemplate,
            params: {
                attr: 'selectListView',
                displayValue: model.getRelatedTitle('selectListView'),
                items: null,
                select2: viewSelect2,
                depends: refClassMaster,
                update: viewUpdate,
                actionBinder: refClassExists
            }
        }
    }]
}) %>

<%- include(columnTemplate, {
    items: [{
        template: overriddenTemplate,
        params: {
            attr: 'eagerLoading',
            template: checkboxTemplate
        }
    }]
}) %>

<%- include(columnTemplate, {
    actionBinder: {show: {eagerLoading: true}},
    items: [{
        template: overriddenTemplate,
        params: {
            attr: 'eagerView',
            template: selectTemplate,
            params: {
                displayValue: model.getRelatedTitle('eagerView'),
                items: null,
                select2: viewSelect2,
                depends: refClassMaster,
                update: viewUpdate,
                actionBinder: refClassExists
            }
        }
    }, {
        template: overriddenTemplate,
        params: {
            attr: 'eagerDepth',
            template: _view.get('_part/attr/number')
        }
    }]
}) %>