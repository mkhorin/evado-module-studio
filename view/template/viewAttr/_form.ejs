<%
layout(_view.get(_layout));
block('tab', 'View attribute');

const classAttr = model.rel('classAttr');
const columnTemplate = _view.get('_part/group/columns');
const overriddenTemplate = _view.get('_part/attr/overridden');
const staticTemplate = _view.get('_part/attr/static');
%>

<%- include(columnTemplate, {
    items: [{
        template: staticTemplate,
        params: {
            attr: 'classAttr',
            displayValue: classAttr.getTitle(),
            url: ['class-attr/update', classAttr]
        }
    }, {
        template: staticTemplate,
        params: {
            attr: 'view',
            displayValue: model.getRelatedTitle('view'),
            url: ['view/update', model.rel('view')]
        }
    }]
}) %>

<%- include(overriddenTemplate, {
    attr: 'label',
    template: _view.get('_part/attr/string')
}) %>

<%- include(columnTemplate, {
    items: [{
        template: staticTemplate,
        params: {
            attr: 'type',
            displayValue: classAttr.getAttrValueLabel('type'),
            value: classAttr.get('type'),
            translateValue: ''
        }
    },{
        template: overriddenTemplate,
        params: {
            attr: 'viewType',
            template: _view.get('_part/attr/enum'),
            params: {
                sets: classAttr.TYPE_ENUMS
            }
        }
    }]
}) %>

<% if (classAttr.isCalc()) { %>
<%- include(overriddenTemplate, {
    attr: 'expression',
    template: _view.get('_part/attr/json')
}) %>
<% } %>